<Project>
  <PropertyGroup>
    <UseArtifactsOutput>true</UseArtifactsOutput>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <PropertyGroup>
    <Product>Fixie</Product>
    <Authors>Fixie, Patrick Lioi</Authors>
    <Copyright>Copyright (c) 2013 Patrick Lioi</Copyright>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://fixie.github.io</PackageProjectUrl>
    <PackageIcon>icon.png</PackageIcon>
    <RepositoryUrl>https://github.com/fixie/fixie</RepositoryUrl>
  </PropertyGroup>

  <PropertyGroup>
    <ContinuousIntegrationBuild Condition="'$(GITHUB_ACTIONS)' == 'true'">true</ContinuousIntegrationBuild>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <MinVerMinimumMajorMinor>5.0</MinVerMinimumMajorMinor>
  </PropertyGroup>

  <PropertyGroup>
    <!--
        Most warnings indicate serious issues requiring immediate attention,
        and should be treated as errors.

        Some warnings are trivial annoyances, where the developer is trusted to
        make reasonable decisions. Treating these as normal warnings, though,
        would make them appear in the Error List and build logs at all times,
        training developers to stop paying attention to all warnings. It is
        better to silence trivial warnings entirely.

        Some warnings are worth being notified about, but treating them as
        errors is annoying in the middle of active development. These are code
        review topics rather than things that should interrupt the developer's
        intermediate work.

        CS0162: Unreachable code detected
        CS0612: '...' is obsolete
        CS0618: '...' is obsolete: "..."
        CS1591: Missing XML comment for publicly visible type or member '...'
    -->
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <NoWarn>1591</NoWarn>
    <WarningsNotAsErrors>162,612,618</WarningsNotAsErrors>
  </PropertyGroup>
</Project>